//Created by libAntimony v2.1-beta
function minf(V, Vm, sm)
  1/(1+exp((Vm-V)/sm));
end

function heavx(x)
  (abs(x)+x)/(2*abs(x)+1e-005);
end

function modx(a, b)
  a-b*floor(a/b);
end

model SquareSource()

  // Compartments and Species:
  species V;

  // Assignment Rules:
  V := Vrest+(Vburst-Vrest)*(heavx(modx(time,tcycle))-heavx(modx(time,tcycle)-toff));

  // Variable initializations:
  Vrest = -70;
  Vburst = -20;
  tstep = 0;
  ton = 6;
  toff = 6;
  tcycle = 12;

  //Other declarations:
  const Vrest, Vburst, tstep, ton, toff, tcycle;
end

model Calcium()

  // Sub-modules, and any changes to those submodules:
  membranePotential: SquareSource();
  membranePotential.V is V;

  // Compartments and Species:
  species Ci, Cmd;

  // Assignment Rules:
  IL := gL*minf(V,Vm,sm)*(V-Vca);
  IR := 0.25*IL;
  JL := alpha*IL/vmd;
  JR := alpha*IR/vcell;
  Jserca := Jsercamax*Ci^2/(Kserca^2+Ci^2);
  Jpmca := Jpmcamax*Ci/(Kpmca+Ci);
  Jncx := Jncx0*(Ci-0.25);
  L := Jserca+Jpmca+Jncx+Jleak;
  dCmd := ts*(-fmd*JL-fmd*B*(Cmd-Ci));
  dCi := ts*(-fi*JR+fv*fi*B*(Cmd-Ci)-fi*L);

  // Reactions:
  _J0:  -> Cmd; dCmd;
  _J1:  -> Ci; dCi;

  // Species initializations:
  Ci = 0.06274;
  Cmd = 0.0674;

  // Variable initializations:
  ts = 60;
  Jsercamax = 41;
  Kserca = 0.27;
  Jpmcamax = 21;
  Kpmca = 0.5;
  Jncx0 = 18.67;
  Jleak = -0.94;
  gL = 250;
  Vm = -20;
  sm = 5;
  Vca = 25;
  alpha = 5.18e-015;
  vcell = 1.15e-012;
  vmd = 4.2e-015;
  fv = 0.0036522;
  fi = 0.01;
  fmd = 0.01;
  B = 200;

  //Other declarations:
  var IL, IR, JL, JR, Jserca, Jpmca, Jncx, L, dCmd;
  const ts, Jsercamax, Kserca, Jpmcamax, Kpmca, Jncx0, Jleak, gL, Vm, sm;
  const Vca, alpha, vcell, vmd, fv, fi, fmd, B;
end

model Secretion()

  // Sub-modules, and any changes to those submodules:
  calcium: Calcium();
  calcium.Cmd is Cmd;
  calcium.Ci is Ci;

  // Compartments and Species:
  species N1, N2, N3, N4, N5, N6, NF, NR, SE;

  // Assignment Rules:
  r2 := r20*Ci/(Ci+Kp2);
  r3 := GlucFact*r30*Ci/(Ci+Kp);

  // Reactions:
  _J0:  -> N1; ts*(-(3*k1*Cmd+rm1)*N1+km1*N2+r1*N5);
  _J1:  -> N2; ts*(3*k1*Cmd*N1-(2*k1*Cmd+km1)*N2+2*km1*N3);
  _J2:  -> N3; ts*(2*k1*Cmd*N2-(2*km1+k1*Cmd)*N3+3*km1*N4);
  _J3:  -> N4; ts*(k1*Cmd*N3-(3*km1+u1)*N4);
  _J4:  -> N5; ts*(rm1*N1-(r1+rm2)*N5+r2*N6);
  _J5:  -> N6; ts*(r3+rm2*N5-(rm3+r2)*N6);
  _J6:  -> NF; ts*(u1*N4-u2*NF);
  _J7:  -> NR; ts*(u2*NF-u3*NR);
  _J8:  -> SE; ts*(u3*NR);

  // Species initializations:
  N1 = 14.71376;
  N2 = 0.612519;
  N3 = 0.0084499;
  N4 = 5.098857e-006;
  N5 = 24.539936;
  N6 = 218.017777;
  NF = 0.003399;
  NR = 0.50988575;
  SE = 0;

  // Variable initializations:
  ts = 60;
  GlucFact = 0;
  k1 = 20;
  km1 = 100;
  r1 = 0.6;
  rm1 = 1;
  r20 = 0.006;
  rm2 = 0.001;
  r30 = 1.205;
  rm3 = 0.0001;
  u1 = 2000;
  u2 = 3;
  u3 = 0.02;
  Kp = 2.3;
  Kp2 = 2.3;

  //Other declarations:
  var r2, r3;
  const ts, GlucFact, k1, km1, r1, rm1, r20, rm2, r30, rm3, u1, u2, u3, Kp;
  const Kp2;
end
